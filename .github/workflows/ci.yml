name: CI/CD - Test, Lint and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        flake8 app/ tests/ --max-line-length=100 --exclude=__pycache__ --count --show-source --statistics
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=app --cov-report=term-missing --cov-fail-under=80
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety
    
    - name: Security scan
      run: |
        safety check -r requirements.txt

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      run: |
        docker build -t savannah-orders-api:test .
    
    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 8000:8000 savannah-orders-api:test
        sleep 10
        curl -f http://localhost:8000/health || exit 1
        docker stop test-container
        docker rm test-container

  deploy-notification:
    runs-on: ubuntu-latest
    needs: [test, security, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - name: Deployment Ready Notification
      run: |
        echo "ðŸš€ All tests passed! Ready for App Runner deployment."
        echo "Your changes will be automatically deployed to AWS App Runner."
        echo "Check your App Runner service in AWS Console for deployment status."
