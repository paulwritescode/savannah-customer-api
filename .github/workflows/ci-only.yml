name: CI Only (Testing & Linting)

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11, 3.12]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run linting
      run: |
        flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run tests with coverage
      env:
        DATABASE_URL: sqlite:///./test_savannah_orders.db
        SECRET_KEY: test-secret-key
        OIDC_ISSUER: https://test.auth0.com/
        OIDC_CLIENT_ID: test-client-id
        OIDC_CLIENT_SECRET: test-client-secret
        AT_USERNAME: sandbox
        AT_API_KEY: test-api-key
        AT_SENDER_ID: test-sender
      run: |
        pytest --cov=app --cov-report=xml --cov-report=html --cov-fail-under=80
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety
    
    - name: Run security scan
      run: |
        safety scan --file requirements.txt

  build-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test Docker build
      run: |
        # Test that the Dockerfile builds successfully
        docker build -t savannah-orders-api:test .
        
        # Test that the container starts
        docker run -d --name test-container \
          -e DATABASE_URL=sqlite:///./data/test.db \
          -e SECRET_KEY=test-key \
          -e OIDC_ISSUER=https://test.auth0.com/ \
          -e OIDC_CLIENT_ID=test-client \
          -e OIDC_CLIENT_SECRET=test-secret \
          -e AT_USERNAME=sandbox \
          -e AT_API_KEY=test-key \
          -e AT_SENDER_ID=TEST \
          -p 8000:8000 \
          savannah-orders-api:test
        
        # Wait for container to start
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:8000/health || exit 1
        
        # Cleanup
        docker stop test-container
        docker rm test-container